{"version":3,"file":"static/js/156.8c9f162e.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/layout/src/divider.tsx","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx","../node_modules/@chakra-ui/layout/src/heading.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\n/**\n * Layout component used to visually separate content in a list or group.\n * It displays a thin horizontal or vertical line, and renders a `hr` tag.\n *\n * @see Docs https://chakra-ui.com/divider\n */\nexport const Divider = forwardRef<DividerProps, \"hr\">(function Divider(\n  props,\n  ref,\n) {\n  const {\n    borderLeftWidth,\n    borderBottomWidth,\n    borderTopWidth,\n    borderRightWidth,\n    borderWidth,\n    borderStyle,\n    borderColor,\n    ...styles\n  } = useStyleConfig(\"Divider\", props)\n  const {\n    className,\n    orientation = \"horizontal\",\n    __css,\n    ...rest\n  } = omitThemingProps(props)\n\n  const dividerStyles = {\n    vertical: {\n      borderLeftWidth:\n        borderLeftWidth || borderRightWidth || borderWidth || \"1px\",\n      height: \"100%\",\n    },\n    horizontal: {\n      borderBottomWidth:\n        borderBottomWidth || borderTopWidth || borderWidth || \"1px\",\n      width: \"100%\",\n    },\n  }\n\n  return (\n    <chakra.hr\n      ref={ref}\n      aria-orientation={orientation}\n      {...rest}\n      __css={{\n        ...styles,\n        border: \"0\",\n\n        borderColor,\n        borderStyle,\n        ...dividerStyles[orientation],\n        ...__css,\n      }}\n      className={cx(\"chakra-divider\", className)}\n    />\n  )\n})\n\nexport interface DividerProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Divider\"> {\n  orientation?: \"horizontal\" | \"vertical\"\n}\n\nDivider.displayName = \"Divider\"\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { register } from '../../redux/auth/operations';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { selectRegisterError } from '../../redux/auth/selectors';\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Heading,\r\n  Divider,\r\n  Text,\r\n  Link,\r\n} from '@chakra-ui/react';\r\n\r\nexport const RegisterForm = () => {\r\n  const registerError = useSelector(selectRegisterError);\r\n  const dispatch = useDispatch();\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(register(formData));\r\n    setFormData({ name: '', email: '', password: '' });\r\n  };\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setFormData(prevState => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <Box maxW=\"400px\" p={6} borderWidth=\"1px\" borderRadius=\"lg\">\r\n      <Heading as=\"h2\" size=\"lg\" mb={4}>\r\n        Register\r\n      </Heading>\r\n      <Divider mb={4} />\r\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n        <FormControl mb={4}>\r\n          <FormLabel>Username</FormLabel>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Name\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </FormControl>\r\n        <FormControl mb={4}>\r\n          <FormLabel>Email</FormLabel>\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </FormControl>\r\n        <FormControl mb={4}>\r\n          <FormLabel>Password</FormLabel>\r\n          <Input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </FormControl>\r\n        {registerError && (\r\n          <Text color=\"red.500\" fontSize=\"sm\" mb={4}>\r\n            {registerError}\r\n          </Text>\r\n        )}\r\n        <Button type=\"submit\" mt={4} colorScheme=\"teal\" size=\"lg\">\r\n          Register\r\n        </Button>\r\n      </form>\r\n      <Text mt={4} fontSize=\"sm\" color=\"gray.500\">\r\n        Already have an account?{' '}\r\n        <Link as={NavLink} to=\"/login\">\r\n          Log In\r\n        </Link>\r\n      </Text>\r\n    </Box>\r\n  );\r\n};\r\n","import { Helmet } from 'react-helmet';\r\nimport { RegisterForm } from '../components/RegisterForm/RegisterForm';\r\n\r\nexport default function Register() {\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Registration</title>\r\n      </Helmet>\r\n      <RegisterForm />\r\n    </div>\r\n  );\r\n}\r\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface HeadingProps\n  extends HTMLChakraProps<\"h2\">,\n    ThemingProps<\"Heading\"> {}\n\n/**\n * `Heading` is used to render semantic HTML heading elements.\n *\n * By default, renders as `h2` with themantic size `xl`\n *\n * @see Docs https://chakra-ui.com/docs/components/heading\n */\nexport const Heading = forwardRef<HeadingProps, \"h2\">(function Heading(\n  props,\n  ref,\n) {\n  const styles = useStyleConfig(\"Heading\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.h2\n      ref={ref}\n      className={cx(\"chakra-heading\", props.className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nHeading.displayName = \"Heading\"\n"],"names":["Divider","forwardRef","props","ref","useStyleConfig","borderLeftWidth","borderBottomWidth","borderTopWidth","borderRightWidth","borderWidth","borderStyle","borderColor","styles","omitThemingProps","className","_omitThemingProps$ori","orientation","__css","rest","dividerStyles","vertical","height","horizontal","width","chakra","hr","border","cx","displayName","RegisterForm","registerError","useSelector","selectRegisterError","dispatch","useDispatch","_useState","useState","name","email","password","_useState2","_slicedToArray","formData","setFormData","handleChange","e","_e$target","target","value","prevState","_objectSpread","_defineProperty","_jsxs","Box","maxW","p","borderRadius","children","_jsx","Heading","as","size","mb","onSubmit","preventDefault","register","autoComplete","FormControl","FormLabel","Input","type","placeholder","onChange","required","Text","color","fontSize","Button","mt","colorScheme","Link","NavLink","to","Register","Helmet","h2"],"sourceRoot":""}